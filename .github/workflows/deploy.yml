# Builds a docker image, publishes it to GitHub's docker repo (ghcr.io),
# and subsequently deploys it as a Container App revision.
#
# The workflow will only run if commit message contains [tag:patch|minor|major]

name: Deploy Update

on:
  push:
    branches: [main]
  pull_request:
    branches: [main]

jobs:
  # ----------------------------------------------------
  # Build React app. Only runs if [tag:patch|minor|major]
  # is found in commit message.
  # ----------------------------------------------------
  build-deploy:
    runs-on: ubuntu-latest
    permissions:
      contents: write
      packages: write

    # only run if commit message contains versioning setting
    if: |
      contains(github.event.head_commit.message, '[tag:patch]')
      || contains(github.event.head_commit.message, '[tag:minor]')
      || contains(github.event.head_commit.message, '[tag:major]')

    steps:
      - uses: actions/checkout@v2
        with:
          fetch-depth: 0

      # generate new version number â€” increment based on [tag:xxx] setting
      - name: Generate version
        id: version
        uses: paulhatch/semantic-version@v4.0.2
        with:
          major_pattern: "[tag:major]"
          minor_pattern: "[tag:minor]"
          short_tags: false

      # tag the repo using the new version
      - name: Tag repo
        uses: actions/github-script@v5
        with:
          script: |
            github.rest.git.createRef({
              owner: context.repo.owner,
              repo: context.repo.repo,
              ref: "refs/tags/${{ steps.version.outputs.version_tag }}",
              sha: context.sha
            })

      - name: Setup node
        uses: actions/setup-node@v2
        with:
          node-version: 14
          # cache: npm-cache

      - name: Build app
        run: |
          npm install
          npm run build --if-present

      - name: Test build
        run: npm run test --if-present

      - name: Azure Login
        uses: azure/login@v1
        with:
          creds: ${{ secrets.AZURE_CREDENTIALS }}

      - name: Upload to blob store
        uses: azure/CLI@v1
        with:
          inlineScript: |
            az storage blob delete-batch \
              --account-name stperdx \
              --source '$web' \
              --pattern '*' \
              --auth-mode login

            az storage blob upload-batch \
              --account-name stperdx  \
              --destination '$web' \
              --source dist \
              --auth-mode login

      - name: Azure logout
        run: az logout
        if: always()

      - name: Create release
        uses: actions/github-script@v5
        with:
          script: |
            github.rest.repos.createRelease({
              owner: context.repo.owner,
              repo: context.repo.repo,
              tag_name: "${{ steps.version.outputs.version_tag }}"
            })
